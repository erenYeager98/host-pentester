import nmap
import time
import requests

def scan_ip(ip):
    nm = nmap.PortScanner()
    print(f"Scanning IP: {ip}")
    nm.scan(ip, arguments='-sV')
    return nm

def save_scan_results(nm, filename='scan_results.txt'):
    with open(filename, 'w') as f:
        for host in nm.all_hosts():
            f.write(f"Host: {host} ({nm[host].hostname()})\n")
            f.write(f"State: {nm[host].state()}\n")
            for proto in nm[host].all_protocols():
                f.write(f"Protocol: {proto}\n")
                lport = nm[host][proto].keys()
                for port in lport:
                    f.write(f"Port: {port}\tState: {nm[host][proto][port]['state']}\tService: {nm[host][proto][port]['name']}\n")

def search_vulnerabilities(service):
    url = f"https://vuldb.com/?search={service}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.text[:500]  # Limiting to the first 500 characters for brevity
    return "No vulnerability information found."

def save_vulnerabilities_info(nm, filename='information_enumerated.txt'):
    with open(filename, 'w') as f:
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                lport = nm[host][proto].keys()
                for port in lport:
                    service = nm[host][proto][port]['name']
                    f.write(f"Searching vulnerabilities for service: {service}\n")
                    vulnerabilities_info = search_vulnerabilities(service)
                    f.write(f"Vulnerabilities information: {vulnerabilities_info}\n")

def main():
    ip_range = input("Enter the IP address or range to scan (e.g., 192.168.1.0/24): ")
    nm = scan_ip(ip_range)
    save_scan_results(nm)
    
    print("Port scan completed. Waiting for 5 seconds before searching for vulnerabilities...")
    time.sleep(5)
    
    save_vulnerabilities_info(nm)
    print("Vulnerability information saved in 'information_enumerated.txt'.")

if __name__ == "__main__":
    main()
